
services:
  chroma:
    image: chromadb/chroma
    container_name: chromadb
    restart: always
    networks:
      - backend
    expose:     # Only available inside Docker
      - "8000"  # Ensure correct binding
    volumes:
      - chroma_data:/chroma

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    networks:
      - backend
    expose:
      - "27017"
    volumes:
      - mongo_data:/data/db
    command: ["mongod", "--quiet", "--bind_ip", "0.0.0.0", "--logpath", "/dev/null"] # Mutes mongodb logs except errors using --logpath /dev/null
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  llm-service:
    depends_on:
      - chroma
      - mongodb
    build: ./core
    restart: unless-stopped
    environment:
      FLASK_ENV: ${FLASK_ENV}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGCHAIN_TRACING_V2: ${LANGCHAIN_TRACING_V2}
      LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
      LANGCHAIN_PROJECT: ${LANGCHAIN_PROJECT}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      GOOGLE_AUTH_KEY: ${GOOGLE_AUTH_KEY}
      GOOGLE_CALENDAR_ID: ${GOOGLE_CALENDAR_ID}
      PORT: ${PORT}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      Port_STT: ${PORT_STT}
    volumes:
      - ./core:/app  # Mount application for live changes
    networks:
      - backend
    ports:
      - "3000:3000"
      - "11434:11434"
    deploy:
      resources:
        limits:
          cpus: '1' # CPU limit
          memory: 2gb  # Memory limit

  speech-to-text:
    build: ./speechToText
    restart: unless-stopped
    environment:
      FLASK_ENV: ${FLASK_ENV}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PORT_STT: ${PORT_STT}
    volumes:
      - ./speechToText:/app
    networks:
      - backend
    ports:
      - "3001:3001"

  redis:
    image: redis:latest
    container_name: redis_audio
    restart: always
    expose:
      - "6379"
    networks:
      - backend
    command: >
      redis-server 
      --appendonly yes 
      --save 60 1 
      --save 300 100 
      --save 900 1000
      --maxmemory 1gb
    volumes:
      - redis_data:/data

  tts:
    build:
      context: ./textToSpeech
      dockerfile: Dockerfile
    networks:
      - backend
    env_file:
      - .env
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
  phoenix:
    image: arizephoenix/phoenix:version-8.3.0 # Must be greater than 4.0 version to work
    depends_on:
      - db
    ports:
      - 6006:6006  # PHOENIX_PORT
      - 4317:4317  # PHOENIX_GRPC_PORT
      - 9090:9090  # [Optional] PROMETHEUS PORT IF ENABLED
    environment:
      - PHOENIX_SQL_DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - PHOENIX_WORKING_DIR=/phoenix
    networks:
      - backend

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432
    volumes:
    - pheonix_data:/pheonix/data
    networks:
      - backend
      
volumes:
  chroma_data:  # Persistent storage for ChromaDB
  mongo_data:   # Persistent storage for MongoDB  pheonix_data:
  redis_data:   # Persistent storage for Redis
  pheonix_data: # Persistent storage for Phoenix

networks:
  backend:
    driver: bridge
